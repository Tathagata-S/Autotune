// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// autotune_lasso
List autotune_lasso(SEXP xin, SEXP yin, float alpha, Nullable<double> lambda0, double tolerance, double beta_tolerance, short int iter_max, short int beta_iter_max, bool standardize, bool standardize_response, bool intercept, bool active, bool verbose, bool l2_partial_residuals);
RcppExport SEXP _Autotune_autotune_lasso(SEXP xinSEXP, SEXP yinSEXP, SEXP alphaSEXP, SEXP lambda0SEXP, SEXP toleranceSEXP, SEXP beta_toleranceSEXP, SEXP iter_maxSEXP, SEXP beta_iter_maxSEXP, SEXP standardizeSEXP, SEXP standardize_responseSEXP, SEXP interceptSEXP, SEXP activeSEXP, SEXP verboseSEXP, SEXP l2_partial_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xin(xinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type yin(yinSEXP);
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Nullable<double> >::type lambda0(lambda0SEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tolerance(beta_toleranceSEXP);
    Rcpp::traits::input_parameter< short int >::type iter_max(iter_maxSEXP);
    Rcpp::traits::input_parameter< short int >::type beta_iter_max(beta_iter_maxSEXP);
    Rcpp::traits::input_parameter< bool >::type standardize(standardizeSEXP);
    Rcpp::traits::input_parameter< bool >::type standardize_response(standardize_responseSEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< bool >::type active(activeSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< bool >::type l2_partial_residuals(l2_partial_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(autotune_lasso(xin, yin, alpha, lambda0, tolerance, beta_tolerance, iter_max, beta_iter_max, standardize, standardize_response, intercept, active, verbose, l2_partial_residuals));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Autotune_autotune_lasso", (DL_FUNC) &_Autotune_autotune_lasso, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_Autotune(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
